name: Continuous Deployment

on:
  push:
    branches: [ staging ]

env:
  CI: false

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      -
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
          registry-url: https://npm.pkg.github.com/
      -
        name: Install dependencies
        working-directory: app
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      -
        name: Build
        working-directory: app
        run: npm run build:staging
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: app/build

  deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://app.customer-portal.stg.goaptive.com
    concurrency:
      group: ${{ github.workflow }}-staging-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      -
        name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: app/build
      -
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      -
        name: Deploy artifacts to S3
        run: |
          aws s3 sync ./app/build s3://${{ vars.AWS_DEPLOY_BUCKET }}
      -
        name: Invalidate CloudFront Distribution
        if: ${{ vars.CLOUDFRONT_DIST_ID != '' }}
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DIST_ID }} --paths '/*'
